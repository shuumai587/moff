package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"
	"text/template"
)

type Package struct {
	Name             string `json:"name"`
	Version          string `json:"version"`
	InstalledVersion string `json:"installed_version"`
}

type VulsResult struct {
	Targets map[string][]Package `json:"targets"`
}

type PackageInfo struct {
	Name    string
	Version string
}

type PlaybookData struct {
	Pkgs []PackageInfo
}

// hoge
const playbookTemplate = `
---
- hosts: all
  tasks:
  {{ range .Pkgs }}
  - name: Install {{ .Name }} package
    apt:
      name: "{{ .Name }}"
      state: present
    {{ end }}
`

func main() {
	// read the JSON file generated by Vuls into memory
	jsonData, err := ioutil.ReadFile("vuls_result.json")
	if err != nil {
		fmt.Println("Error reading JSON file:", err)
		os.Exit(1)
	}

	// unmarshal the JSON data into a VulsResult struct
	var vulsResult VulsResult
	err = json.Unmarshal(jsonData, &vulsResult)
	if err != nil {
		fmt.Println("Error unmarshalling JSON data:", err)
		os.Exit(1)
	}

	// iterate over the packages in the VulsResult and extract vulnerability information
	var selectedPkgs []PackageInfo
	for _, packages := range vulsResult.Targets {
		for _, pkg := range packages {
			// check if the package has any vulnerabilities
			if pkg.Version != pkg.InstalledVersion {
				// if so, add it to the list of selected packages
				selectedPkgs = append(selectedPkgs, PackageInfo{Name: pkg.Name, Version: pkg.Version})
			}
		}
	}

	// generate the Ansible playbook from the selected packages
	playbookData := PlaybookData{
		Pkgs: selectedPkgs,
	}
	tmpl, err := template.New("playbook").Parse(playbookTemplate)
	if err != nil {
		fmt.Println("Error parsing playbook template:", err)
		os.Exit(1)
	}
	file, err := os.Create("install_pkgs.yaml")
	if err != nil {
		fmt.Println("Error creating playbook file:", err)
		os.Exit(1)
	}
	defer file.Close()
	err = tmpl.Execute(file, playbookData)
	if err != nil {
		fmt.Println("Error generating playbook:", err)
		os.Exit(1)
	}

	fmt.Println("Ansible playbook generated successfully!")
}
